<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
        <!-- 注解扫描器 -->
        <context:component-scan base-package="com.sgi.service.impl"></context:component-scan>
        <!-- 数据源配置文件 -->
      <context:property-placeholder location="classpath:db.properties" />
     <bean name="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <property name="driverClassName" value="${jdbc.driver}"></property>
		<property name="url" value="${jdbc.url}"></property>
		<property name="username" value="${jdbc.username}"></property>
		<property name="password" value="${jdbc.password}"></property>
     </bean>
       <!-- spring和mybaties的整合 -->
	<bean id="SqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<!--指定了这个属性后，Mybatis会把这个类型的短名称作为这个类型的别名，前提是该类上没有标注@Alias注解，否则将使用该注解对应的值作为此种类型的别名  -->
		<property name="typeAliasesPackage" value="com.sgi.pojo" />
		<!-- 指定mybatis 文件位置-->
		<property name="configLocation" value="classpath:applicationContext_mybatis.xml" />
	</bean>
	
	<!-- Mapper扫描器 -->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<!--扫描所有mapper接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.sgi.mapper" />
		<property name="sqlSessionFactoryBeanName" value="SqlSessionFactory" />
	</bean>
		
		<!-- 事务管理器 -->
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!--开启基于注解的事务，使用xml配置形式的事务（比较主要的都是使用配置式）  -->
	<aop:config>
		<!-- 切入点表达式  第一个* 表示返回值类型 第一个  ;表示service包及其子包所有类和所有方法，(..)表示任意参数-->
		<aop:pointcut expression="execution(* com.sgi.service..*(..))" id="txPoint"/>
		<!-- 配置事务增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	<!-- 声明式事务 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="ins*" />
			<tx:method name="upd*" />
			<tx:method name="del*" />
			<tx:method name="login*" />
			<tx:method name="*" read-only="true" />
		</tx:attributes>
	</tx:advice>
</beans>